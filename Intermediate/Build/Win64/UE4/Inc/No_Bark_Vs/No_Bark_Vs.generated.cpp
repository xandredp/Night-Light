// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "No_Bark_Vs.h"
#include "GeneratedCppIncludes.h"
#include "No_Bark_Vs.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1No_Bark_Vs() {}
FName NO_BARK_VS_OnStateChanged = FName(TEXT("OnStateChanged"));
FName NO_BARK_VS_OnUsed = FName(TEXT("OnUsed"));
FName NO_BARK_VS_ReloadInventory = FName(TEXT("ReloadInventory"));
	void ABaseInteractable::StaticRegisterNativesABaseInteractable()
	{
		FNativeFunctionRegistrar::RegisterFunction(ABaseInteractable::StaticClass(), "GetInteractText",(Native)&ABaseInteractable::execGetInteractText);
	}
	IMPLEMENT_CLASS(ABaseInteractable, 615337825);
	void APickup::OnUsed()
	{
		ProcessEvent(FindFunctionChecked(NO_BARK_VS_OnUsed),NULL);
	}
	void APickup::StaticRegisterNativesAPickup()
	{
	}
	IMPLEMENT_CLASS(APickup, 2218758401);
static class UEnum* EProjectileType_StaticEnum()
{
	extern NO_BARK_VS_API class UPackage* Z_Construct_UPackage__Script_No_Bark_Vs();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern NO_BARK_VS_API class UEnum* Z_Construct_UEnum_No_Bark_Vs_EProjectileType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_No_Bark_Vs_EProjectileType, Z_Construct_UPackage__Script_No_Bark_Vs(), TEXT("EProjectileType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EProjectileType(EProjectileType_StaticEnum, TEXT("/Script/No_Bark_Vs"), TEXT("EProjectileType"), false, nullptr, nullptr);
static class UEnum* EAttackType_StaticEnum()
{
	extern NO_BARK_VS_API class UPackage* Z_Construct_UPackage__Script_No_Bark_Vs();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern NO_BARK_VS_API class UEnum* Z_Construct_UEnum_No_Bark_Vs_EAttackType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_No_Bark_Vs_EAttackType, Z_Construct_UPackage__Script_No_Bark_Vs(), TEXT("EAttackType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EAttackType(EAttackType_StaticEnum, TEXT("/Script/No_Bark_Vs"), TEXT("EAttackType"), false, nullptr, nullptr);
class UScriptStruct* FWeaponData::StaticStruct()
{
	extern NO_BARK_VS_API class UPackage* Z_Construct_UPackage__Script_No_Bark_Vs();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern NO_BARK_VS_API class UScriptStruct* Z_Construct_UScriptStruct_FWeaponData();
		extern NO_BARK_VS_API uint32 Get_Z_Construct_UScriptStruct_FWeaponData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FWeaponData, Z_Construct_UPackage__Script_No_Bark_Vs(), TEXT("WeaponData"), sizeof(FWeaponData), Get_Z_Construct_UScriptStruct_FWeaponData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FWeaponData(FWeaponData::StaticStruct, TEXT("/Script/No_Bark_Vs"), TEXT("WeaponData"), false, nullptr, nullptr);
static struct FScriptStruct_No_Bark_Vs_StaticRegisterNativesFWeaponData
{
	FScriptStruct_No_Bark_Vs_StaticRegisterNativesFWeaponData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("WeaponData")),new UScriptStruct::TCppStructOps<FWeaponData>);
	}
} ScriptStruct_No_Bark_Vs_StaticRegisterNativesFWeaponData;
	void ABaseWeapon::StaticRegisterNativesABaseWeapon()
	{
		FNativeFunctionRegistrar::RegisterFunction(ABaseWeapon::StaticClass(), "FireAmmos",(Native)&ABaseWeapon::execFireAmmos);
		FNativeFunctionRegistrar::RegisterFunction(ABaseWeapon::StaticClass(), "Instant_Fire",(Native)&ABaseWeapon::execInstant_Fire);
		FNativeFunctionRegistrar::RegisterFunction(ABaseWeapon::StaticClass(), "ProjectileFire",(Native)&ABaseWeapon::execProjectileFire);
	}
	IMPLEMENT_CLASS(ABaseWeapon, 3352387554);
	void APickupHealth::StaticRegisterNativesAPickupHealth()
	{
	}
	IMPLEMENT_CLASS(APickupHealth, 4023159067);
static class UEnum* EHUDState_StaticEnum()
{
	extern NO_BARK_VS_API class UPackage* Z_Construct_UPackage__Script_No_Bark_Vs();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern NO_BARK_VS_API class UEnum* Z_Construct_UEnum_No_Bark_Vs_EHUDState();
		Singleton = GetStaticEnum(Z_Construct_UEnum_No_Bark_Vs_EHUDState, Z_Construct_UPackage__Script_No_Bark_Vs(), TEXT("EHUDState"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EHUDState(EHUDState_StaticEnum, TEXT("/Script/No_Bark_Vs"), TEXT("EHUDState"), false, nullptr, nullptr);
	void AGameHud::OnStateChanged(EHUDState NewState)
	{
		GameHud_eventOnStateChanged_Parms Parms;
		Parms.NewState=NewState;
		ProcessEvent(FindFunctionChecked(NO_BARK_VS_OnStateChanged),&Parms);
	}
	void AGameHud::StaticRegisterNativesAGameHud()
	{
		FNativeFunctionRegistrar::RegisterFunction(AGameHud::StaticClass(), "GetCurrentState",(Native)&AGameHud::execGetCurrentState);
		FNativeFunctionRegistrar::RegisterFunction(AGameHud::StaticClass(), "OnStateChanged",(Native)&AGameHud::execOnStateChanged);
	}
	IMPLEMENT_CLASS(AGameHud, 427289753);
static class UEnum* EItemType_StaticEnum()
{
	extern NO_BARK_VS_API class UPackage* Z_Construct_UPackage__Script_No_Bark_Vs();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern NO_BARK_VS_API class UEnum* Z_Construct_UEnum_No_Bark_Vs_EItemType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_No_Bark_Vs_EItemType, Z_Construct_UPackage__Script_No_Bark_Vs(), TEXT("EItemType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EItemType(EItemType_StaticEnum, TEXT("/Script/No_Bark_Vs"), TEXT("EItemType"), false, nullptr, nullptr);
static class UEnum* EInventorySlot_StaticEnum()
{
	extern NO_BARK_VS_API class UPackage* Z_Construct_UPackage__Script_No_Bark_Vs();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern NO_BARK_VS_API class UEnum* Z_Construct_UEnum_No_Bark_Vs_EInventorySlot();
		Singleton = GetStaticEnum(Z_Construct_UEnum_No_Bark_Vs_EInventorySlot, Z_Construct_UPackage__Script_No_Bark_Vs(), TEXT("EInventorySlot"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EInventorySlot(EInventorySlot_StaticEnum, TEXT("/Script/No_Bark_Vs"), TEXT("EInventorySlot"), false, nullptr, nullptr);
class UScriptStruct* FTakeHitInfo::StaticStruct()
{
	extern NO_BARK_VS_API class UPackage* Z_Construct_UPackage__Script_No_Bark_Vs();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern NO_BARK_VS_API class UScriptStruct* Z_Construct_UScriptStruct_FTakeHitInfo();
		extern NO_BARK_VS_API uint32 Get_Z_Construct_UScriptStruct_FTakeHitInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTakeHitInfo, Z_Construct_UPackage__Script_No_Bark_Vs(), TEXT("TakeHitInfo"), sizeof(FTakeHitInfo), Get_Z_Construct_UScriptStruct_FTakeHitInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTakeHitInfo(FTakeHitInfo::StaticStruct, TEXT("/Script/No_Bark_Vs"), TEXT("TakeHitInfo"), false, nullptr, nullptr);
static struct FScriptStruct_No_Bark_Vs_StaticRegisterNativesFTakeHitInfo
{
	FScriptStruct_No_Bark_Vs_StaticRegisterNativesFTakeHitInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TakeHitInfo")),new UScriptStruct::TCppStructOps<FTakeHitInfo>);
	}
} ScriptStruct_No_Bark_Vs_StaticRegisterNativesFTakeHitInfo;
class UScriptStruct* FCurrentInventoryItemInfo::StaticStruct()
{
	extern NO_BARK_VS_API class UPackage* Z_Construct_UPackage__Script_No_Bark_Vs();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern NO_BARK_VS_API class UScriptStruct* Z_Construct_UScriptStruct_FCurrentInventoryItemInfo();
		extern NO_BARK_VS_API uint32 Get_Z_Construct_UScriptStruct_FCurrentInventoryItemInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCurrentInventoryItemInfo, Z_Construct_UPackage__Script_No_Bark_Vs(), TEXT("CurrentInventoryItemInfo"), sizeof(FCurrentInventoryItemInfo), Get_Z_Construct_UScriptStruct_FCurrentInventoryItemInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCurrentInventoryItemInfo(FCurrentInventoryItemInfo::StaticStruct, TEXT("/Script/No_Bark_Vs"), TEXT("CurrentInventoryItemInfo"), false, nullptr, nullptr);
static struct FScriptStruct_No_Bark_Vs_StaticRegisterNativesFCurrentInventoryItemInfo
{
	FScriptStruct_No_Bark_Vs_StaticRegisterNativesFCurrentInventoryItemInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("CurrentInventoryItemInfo")),new UScriptStruct::TCppStructOps<FCurrentInventoryItemInfo>);
	}
} ScriptStruct_No_Bark_Vs_StaticRegisterNativesFCurrentInventoryItemInfo;
class UScriptStruct* FInventoryItem::StaticStruct()
{
	extern NO_BARK_VS_API class UPackage* Z_Construct_UPackage__Script_No_Bark_Vs();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern NO_BARK_VS_API class UScriptStruct* Z_Construct_UScriptStruct_FInventoryItem();
		extern NO_BARK_VS_API uint32 Get_Z_Construct_UScriptStruct_FInventoryItem_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FInventoryItem, Z_Construct_UPackage__Script_No_Bark_Vs(), TEXT("InventoryItem"), sizeof(FInventoryItem), Get_Z_Construct_UScriptStruct_FInventoryItem_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FInventoryItem(FInventoryItem::StaticStruct, TEXT("/Script/No_Bark_Vs"), TEXT("InventoryItem"), false, nullptr, nullptr);
static struct FScriptStruct_No_Bark_Vs_StaticRegisterNativesFInventoryItem
{
	FScriptStruct_No_Bark_Vs_StaticRegisterNativesFInventoryItem()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("InventoryItem")),new UScriptStruct::TCppStructOps<FInventoryItem>);
	}
} ScriptStruct_No_Bark_Vs_StaticRegisterNativesFInventoryItem;
class UScriptStruct* FCraftingInfo::StaticStruct()
{
	extern NO_BARK_VS_API class UPackage* Z_Construct_UPackage__Script_No_Bark_Vs();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern NO_BARK_VS_API class UScriptStruct* Z_Construct_UScriptStruct_FCraftingInfo();
		extern NO_BARK_VS_API uint32 Get_Z_Construct_UScriptStruct_FCraftingInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCraftingInfo, Z_Construct_UPackage__Script_No_Bark_Vs(), TEXT("CraftingInfo"), sizeof(FCraftingInfo), Get_Z_Construct_UScriptStruct_FCraftingInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCraftingInfo(FCraftingInfo::StaticStruct, TEXT("/Script/No_Bark_Vs"), TEXT("CraftingInfo"), false, nullptr, nullptr);
static struct FScriptStruct_No_Bark_Vs_StaticRegisterNativesFCraftingInfo
{
	FScriptStruct_No_Bark_Vs_StaticRegisterNativesFCraftingInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("CraftingInfo")),new UScriptStruct::TCppStructOps<FCraftingInfo>);
	}
} ScriptStruct_No_Bark_Vs_StaticRegisterNativesFCraftingInfo;
	void ANBCharacter::StaticRegisterNativesANBCharacter()
	{
		FNativeFunctionRegistrar::RegisterFunction(ANBCharacter::StaticClass(), "CheckForInteractables",(Native)&ANBCharacter::execCheckForInteractables);
		FNativeFunctionRegistrar::RegisterFunction(ANBCharacter::StaticClass(), "GetInteractableInView",(Native)&ANBCharacter::execGetInteractableInView);
	}
	IMPLEMENT_CLASS(ANBCharacter, 1599596045);
	void ANo_Bark_VsGameModeBase::StaticRegisterNativesANo_Bark_VsGameModeBase()
	{
	}
	IMPLEMENT_CLASS(ANo_Bark_VsGameModeBase, 3800685449);
	void APlayController::ReloadInventory()
	{
		ProcessEvent(FindFunctionChecked(NO_BARK_VS_ReloadInventory),NULL);
	}
	void APlayController::StaticRegisterNativesAPlayController()
	{
		FNativeFunctionRegistrar::RegisterFunction(APlayController::StaticClass(), "AddItemtoInventoryByID",(Native)&APlayController::execAddItemtoInventoryByID);
		FNativeFunctionRegistrar::RegisterFunction(APlayController::StaticClass(), "ChangeMaxInventorySize",(Native)&APlayController::execChangeMaxInventorySize);
		FNativeFunctionRegistrar::RegisterFunction(APlayController::StaticClass(), "CloseInventory",(Native)&APlayController::execCloseInventory);
		FNativeFunctionRegistrar::RegisterFunction(APlayController::StaticClass(), "CraftItem",(Native)&APlayController::execCraftItem);
		FNativeFunctionRegistrar::RegisterFunction(APlayController::StaticClass(), "EnableActionBar",(Native)&APlayController::execEnableActionBar);
		FNativeFunctionRegistrar::RegisterFunction(APlayController::StaticClass(), "Interact",(Native)&APlayController::execInteract);
		FNativeFunctionRegistrar::RegisterFunction(APlayController::StaticClass(), "OpenInventory",(Native)&APlayController::execOpenInventory);
		FNativeFunctionRegistrar::RegisterFunction(APlayController::StaticClass(), "SetInputModetoGameandUI",(Native)&APlayController::execSetInputModetoGameandUI);
		FNativeFunctionRegistrar::RegisterFunction(APlayController::StaticClass(), "SetupInputComponent",(Native)&APlayController::execSetupInputComponent);
		FNativeFunctionRegistrar::RegisterFunction(APlayController::StaticClass(), "UnUseItem",(Native)&APlayController::execUnUseItem);
		FNativeFunctionRegistrar::RegisterFunction(APlayController::StaticClass(), "UseItem",(Native)&APlayController::execUseItem);
	}
	IMPLEMENT_CLASS(APlayController, 1602098287);
	void APlayGameMode::StaticRegisterNativesAPlayGameMode()
	{
	}
	IMPLEMENT_CLASS(APlayGameMode, 3464750897);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_AActor();
	ENGINE_API class UClass* Z_Construct_UClass_UBoxComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UStaticMeshComponent_NoRegister();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTableRowBase();
	ENGINE_API class UClass* Z_Construct_UClass_UTexture2D_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundCue_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USkeletalMeshComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AHUD();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRadialDamageEvent();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPointDamageEvent();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDamageEvent();
	ENGINE_API class UClass* Z_Construct_UClass_AActor_NoRegister();
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ACharacter();
	ENGINE_API class UClass* Z_Construct_UClass_UCameraComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USpringArmComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AGameModeBase();
	ENGINE_API class UClass* Z_Construct_UClass_APlayerController();
	UMG_API class UClass* Z_Construct_UClass_UUserWidget_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AGameMode();
	ENGINE_API class UClass* Z_Construct_UClass_UDataTable_NoRegister();

	NO_BARK_VS_API class UFunction* Z_Construct_UFunction_ABaseInteractable_GetInteractText();
	NO_BARK_VS_API class UClass* Z_Construct_UClass_ABaseInteractable_NoRegister();
	NO_BARK_VS_API class UClass* Z_Construct_UClass_ABaseInteractable();
	NO_BARK_VS_API class UFunction* Z_Construct_UFunction_APickup_OnUsed();
	NO_BARK_VS_API class UClass* Z_Construct_UClass_APickup_NoRegister();
	NO_BARK_VS_API class UClass* Z_Construct_UClass_APickup();
	NO_BARK_VS_API class UEnum* Z_Construct_UEnum_No_Bark_Vs_EProjectileType();
	NO_BARK_VS_API class UEnum* Z_Construct_UEnum_No_Bark_Vs_EAttackType();
	NO_BARK_VS_API class UScriptStruct* Z_Construct_UScriptStruct_FWeaponData();
	NO_BARK_VS_API class UFunction* Z_Construct_UFunction_ABaseWeapon_FireAmmos();
	NO_BARK_VS_API class UFunction* Z_Construct_UFunction_ABaseWeapon_Instant_Fire();
	NO_BARK_VS_API class UFunction* Z_Construct_UFunction_ABaseWeapon_ProjectileFire();
	NO_BARK_VS_API class UClass* Z_Construct_UClass_ABaseWeapon_NoRegister();
	NO_BARK_VS_API class UClass* Z_Construct_UClass_ABaseWeapon();
	NO_BARK_VS_API class UClass* Z_Construct_UClass_APickupHealth_NoRegister();
	NO_BARK_VS_API class UClass* Z_Construct_UClass_APickupHealth();
	NO_BARK_VS_API class UEnum* Z_Construct_UEnum_No_Bark_Vs_EHUDState();
	NO_BARK_VS_API class UFunction* Z_Construct_UFunction_AGameHud_GetCurrentState();
	NO_BARK_VS_API class UFunction* Z_Construct_UFunction_AGameHud_OnStateChanged();
	NO_BARK_VS_API class UClass* Z_Construct_UClass_AGameHud_NoRegister();
	NO_BARK_VS_API class UClass* Z_Construct_UClass_AGameHud();
	NO_BARK_VS_API class UEnum* Z_Construct_UEnum_No_Bark_Vs_EItemType();
	NO_BARK_VS_API class UEnum* Z_Construct_UEnum_No_Bark_Vs_EInventorySlot();
	NO_BARK_VS_API class UScriptStruct* Z_Construct_UScriptStruct_FTakeHitInfo();
	NO_BARK_VS_API class UScriptStruct* Z_Construct_UScriptStruct_FCurrentInventoryItemInfo();
	NO_BARK_VS_API class UScriptStruct* Z_Construct_UScriptStruct_FInventoryItem();
	NO_BARK_VS_API class UScriptStruct* Z_Construct_UScriptStruct_FCraftingInfo();
	NO_BARK_VS_API class UFunction* Z_Construct_UFunction_ANBCharacter_CheckForInteractables();
	NO_BARK_VS_API class UFunction* Z_Construct_UFunction_ANBCharacter_GetInteractableInView();
	NO_BARK_VS_API class UClass* Z_Construct_UClass_ANBCharacter_NoRegister();
	NO_BARK_VS_API class UClass* Z_Construct_UClass_ANBCharacter();
	NO_BARK_VS_API class UClass* Z_Construct_UClass_ANo_Bark_VsGameModeBase_NoRegister();
	NO_BARK_VS_API class UClass* Z_Construct_UClass_ANo_Bark_VsGameModeBase();
	NO_BARK_VS_API class UFunction* Z_Construct_UFunction_APlayController_AddItemtoInventoryByID();
	NO_BARK_VS_API class UFunction* Z_Construct_UFunction_APlayController_ChangeMaxInventorySize();
	NO_BARK_VS_API class UFunction* Z_Construct_UFunction_APlayController_CloseInventory();
	NO_BARK_VS_API class UFunction* Z_Construct_UFunction_APlayController_CraftItem();
	NO_BARK_VS_API class UFunction* Z_Construct_UFunction_APlayController_EnableActionBar();
	NO_BARK_VS_API class UFunction* Z_Construct_UFunction_APlayController_Interact();
	NO_BARK_VS_API class UFunction* Z_Construct_UFunction_APlayController_OpenInventory();
	NO_BARK_VS_API class UFunction* Z_Construct_UFunction_APlayController_ReloadInventory();
	NO_BARK_VS_API class UFunction* Z_Construct_UFunction_APlayController_SetInputModetoGameandUI();
	NO_BARK_VS_API class UFunction* Z_Construct_UFunction_APlayController_SetupInputComponent();
	NO_BARK_VS_API class UFunction* Z_Construct_UFunction_APlayController_UnUseItem();
	NO_BARK_VS_API class UFunction* Z_Construct_UFunction_APlayController_UseItem();
	NO_BARK_VS_API class UClass* Z_Construct_UClass_APlayController_NoRegister();
	NO_BARK_VS_API class UClass* Z_Construct_UClass_APlayController();
	NO_BARK_VS_API class UClass* Z_Construct_UClass_APlayGameMode_NoRegister();
	NO_BARK_VS_API class UClass* Z_Construct_UClass_APlayGameMode();
	NO_BARK_VS_API class UPackage* Z_Construct_UPackage__Script_No_Bark_Vs();
	UFunction* Z_Construct_UFunction_ABaseInteractable_GetInteractText()
	{
		struct BaseInteractable_eventGetInteractText_Parms
		{
			FString ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_ABaseInteractable();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetInteractText"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(BaseInteractable_eventGetInteractText_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ReturnValue, BaseInteractable_eventGetInteractText_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Pickup"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("BaseInteractable.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_ABaseInteractable_NoRegister()
	{
		return ABaseInteractable::StaticClass();
	}
	UClass* Z_Construct_UClass_ABaseInteractable()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_No_Bark_Vs();
			OuterClass = ABaseInteractable::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_ABaseInteractable_GetInteractText());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Action = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Action"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Action, ABaseInteractable), 0x0010000000010001);
				UProperty* NewProp_Name = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Name, ABaseInteractable), 0x0010000000010001);
				UProperty* NewProp_PickupCollisionComp = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PickupCollisionComp"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(PickupCollisionComp, ABaseInteractable), 0x00100000000a000d, Z_Construct_UClass_UBoxComponent_NoRegister());
				UProperty* NewProp_PickupMesh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PickupMesh"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(PickupMesh, ABaseInteractable), 0x001000000008000d, Z_Construct_UClass_UStaticMeshComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ABaseInteractable_GetInteractText(), "GetInteractText"); // 1436257223
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BaseInteractable.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("BaseInteractable.h"));
				MetaData->SetValue(NewProp_Action, TEXT("Category"), TEXT("Pickup"));
				MetaData->SetValue(NewProp_Action, TEXT("ModuleRelativePath"), TEXT("BaseInteractable.h"));
				MetaData->SetValue(NewProp_Name, TEXT("Category"), TEXT("Pickup"));
				MetaData->SetValue(NewProp_Name, TEXT("ModuleRelativePath"), TEXT("BaseInteractable.h"));
				MetaData->SetValue(NewProp_PickupCollisionComp, TEXT("Category"), TEXT("Collision"));
				MetaData->SetValue(NewProp_PickupCollisionComp, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_PickupCollisionComp, TEXT("ModuleRelativePath"), TEXT("BaseInteractable.h"));
				MetaData->SetValue(NewProp_PickupMesh, TEXT("Category"), TEXT("Colllision"));
				MetaData->SetValue(NewProp_PickupMesh, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_PickupMesh, TEXT("ModuleRelativePath"), TEXT("BaseInteractable.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ABaseInteractable(Z_Construct_UClass_ABaseInteractable, &ABaseInteractable::StaticClass, TEXT("ABaseInteractable"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ABaseInteractable);
	UFunction* Z_Construct_UFunction_APickup_OnUsed()
	{
		UObject* Outer=Z_Construct_UClass_APickup();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnUsed"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x0C020800, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Pickup"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Pickup.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_APickup_NoRegister()
	{
		return APickup::StaticClass();
	}
	UClass* Z_Construct_UClass_APickup()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ABaseInteractable();
			Z_Construct_UPackage__Script_No_Bark_Vs();
			OuterClass = APickup::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_APickup_OnUsed());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ItemID = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ItemID"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(ItemID, APickup), 0x0010000000000005);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_APickup_OnUsed(), "OnUsed"); // 3866972614
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Pickup.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Pickup.h"));
				MetaData->SetValue(NewProp_ItemID, TEXT("Category"), TEXT("Pickup"));
				MetaData->SetValue(NewProp_ItemID, TEXT("ModuleRelativePath"), TEXT("Pickup.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_APickup(Z_Construct_UClass_APickup, &APickup::StaticClass, TEXT("APickup"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(APickup);
	UEnum* Z_Construct_UEnum_No_Bark_Vs_EProjectileType()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_No_Bark_Vs();
		extern uint32 Get_Z_Construct_UEnum_No_Bark_Vs_EProjectileType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EProjectileType"), 0, Get_Z_Construct_UEnum_No_Bark_Vs_EProjectileType_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EProjectileType"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EBullet")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("ESpread")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EProjectile")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EProjectileType_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("EProjectileType");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("EBullet.DisplayName"), TEXT("Bullet"));
			MetaData->SetValue(ReturnEnum, TEXT("EProjectile.DisplayName"), TEXT("Projectile"));
			MetaData->SetValue(ReturnEnum, TEXT("ESpread.DisplayName"), TEXT("Spread"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("BaseWeapon.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_No_Bark_Vs_EProjectileType_CRC() { return 1953445956U; }
	UEnum* Z_Construct_UEnum_No_Bark_Vs_EAttackType()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_No_Bark_Vs();
		extern uint32 Get_Z_Construct_UEnum_No_Bark_Vs_EAttackType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EAttackType"), 0, Get_Z_Construct_UEnum_No_Bark_Vs_EAttackType_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EAttackType"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EAttackType::EMelee")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EAttackType::ERanged")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EAttackType::EAttackType_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("EAttackType");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("EMelee.ToolTip"), TEXT("For currently equipped items/weapons"));
			MetaData->SetValue(ReturnEnum, TEXT("ERanged.ToolTip"), TEXT("For primary weapons on spine bone"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("BaseWeapon.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_No_Bark_Vs_EAttackType_CRC() { return 1699267903U; }
	UScriptStruct* Z_Construct_UScriptStruct_FWeaponData()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_No_Bark_Vs();
		extern uint32 Get_Z_Construct_UScriptStruct_FWeaponData_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("WeaponData"), sizeof(FWeaponData), Get_Z_Construct_UScriptStruct_FWeaponData_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("WeaponData"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FTableRowBase(), new UScriptStruct::TCppStructOps<FWeaponData>, EStructFlags(0x00000001));
			UProperty* NewProp_Priority = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Priority"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Priority, FWeaponData), 0x0010000000000005);
			UProperty* NewProp_SplashArt = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SplashArt"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(SplashArt, FWeaponData), 0x0010000000000005, Z_Construct_UClass_UTexture2D_NoRegister());
			UProperty* NewProp_Name = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Name, FWeaponData), 0x0010000000000005);
			UProperty* NewProp_ShotCost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ShotCost"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ShotCost, FWeaponData), 0x0010000000000005);
			UProperty* NewProp_TimeBetweenShots = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TimeBetweenShots"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(TimeBetweenShots, FWeaponData), 0x0010000000000005);
			UProperty* NewProp_MaxClip = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MaxClip"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(MaxClip, FWeaponData), 0x0010000000000005);
			UProperty* NewProp_MaxAmmo = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MaxAmmo"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(MaxAmmo, FWeaponData), 0x0010000000000005);
			UProperty* NewProp_WeaponSpread = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("WeaponSpread"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(WeaponSpread, FWeaponData), 0x0010000000000005);
			UProperty* NewProp_WeaponSpeed = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("WeaponSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(WeaponSpeed, FWeaponData), 0x0010000000000005);
			UProperty* NewProp_WeaponRange = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("WeaponRange"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(WeaponRange, FWeaponData), 0x0010000000000005);
			UProperty* NewProp_WeaponDamage = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("WeaponDamage"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(WeaponDamage, FWeaponData), 0x0010000000000005);
			UProperty* NewProp_eAttackType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("eAttackType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(eAttackType, FWeaponData), 0x0010000000000005, Z_Construct_UEnum_No_Bark_Vs_EAttackType());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("BaseWeapon.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("TableRowBase for Weapon Data TABLE."));
			MetaData->SetValue(NewProp_Priority, TEXT("Category"), TEXT("Config"));
			MetaData->SetValue(NewProp_Priority, TEXT("ModuleRelativePath"), TEXT("BaseWeapon.h"));
			MetaData->SetValue(NewProp_SplashArt, TEXT("Category"), TEXT("Config"));
			MetaData->SetValue(NewProp_SplashArt, TEXT("ModuleRelativePath"), TEXT("BaseWeapon.h"));
			MetaData->SetValue(NewProp_Name, TEXT("Category"), TEXT("Config"));
			MetaData->SetValue(NewProp_Name, TEXT("ModuleRelativePath"), TEXT("BaseWeapon.h"));
			MetaData->SetValue(NewProp_ShotCost, TEXT("Category"), TEXT("Ammo"));
			MetaData->SetValue(NewProp_ShotCost, TEXT("ModuleRelativePath"), TEXT("BaseWeapon.h"));
			MetaData->SetValue(NewProp_TimeBetweenShots, TEXT("Category"), TEXT("Config"));
			MetaData->SetValue(NewProp_TimeBetweenShots, TEXT("ModuleRelativePath"), TEXT("BaseWeapon.h"));
			MetaData->SetValue(NewProp_MaxClip, TEXT("Category"), TEXT("Config"));
			MetaData->SetValue(NewProp_MaxClip, TEXT("ModuleRelativePath"), TEXT("BaseWeapon.h"));
			MetaData->SetValue(NewProp_MaxAmmo, TEXT("Category"), TEXT("Ammo"));
			MetaData->SetValue(NewProp_MaxAmmo, TEXT("ModuleRelativePath"), TEXT("BaseWeapon.h"));
			MetaData->SetValue(NewProp_WeaponSpread, TEXT("Category"), TEXT("Config"));
			MetaData->SetValue(NewProp_WeaponSpread, TEXT("ModuleRelativePath"), TEXT("BaseWeapon.h"));
			MetaData->SetValue(NewProp_WeaponSpeed, TEXT("Category"), TEXT("Config"));
			MetaData->SetValue(NewProp_WeaponSpeed, TEXT("ModuleRelativePath"), TEXT("BaseWeapon.h"));
			MetaData->SetValue(NewProp_WeaponRange, TEXT("Category"), TEXT("Config"));
			MetaData->SetValue(NewProp_WeaponRange, TEXT("ModuleRelativePath"), TEXT("BaseWeapon.h"));
			MetaData->SetValue(NewProp_WeaponDamage, TEXT("Category"), TEXT("Config"));
			MetaData->SetValue(NewProp_WeaponDamage, TEXT("ModuleRelativePath"), TEXT("BaseWeapon.h"));
			MetaData->SetValue(NewProp_eAttackType, TEXT("Category"), TEXT("WeaponData"));
			MetaData->SetValue(NewProp_eAttackType, TEXT("ModuleRelativePath"), TEXT("BaseWeapon.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FWeaponData_CRC() { return 3958897703U; }
	UFunction* Z_Construct_UFunction_ABaseWeapon_FireAmmos()
	{
		UObject* Outer=Z_Construct_UClass_ABaseWeapon();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FireAmmos"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Config"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("BaseWeapon.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ABaseWeapon_Instant_Fire()
	{
		UObject* Outer=Z_Construct_UClass_ABaseWeapon();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Instant_Fire"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Config"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("BaseWeapon.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ABaseWeapon_ProjectileFire()
	{
		UObject* Outer=Z_Construct_UClass_ABaseWeapon();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ProjectileFire"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Config"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("BaseWeapon.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_ABaseWeapon_NoRegister()
	{
		return ABaseWeapon::StaticClass();
	}
	UClass* Z_Construct_UClass_ABaseWeapon()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_APickup();
			Z_Construct_UPackage__Script_No_Bark_Vs();
			OuterClass = ABaseWeapon::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_ABaseWeapon_FireAmmos());
				OuterClass->LinkChild(Z_Construct_UFunction_ABaseWeapon_Instant_Fire());
				OuterClass->LinkChild(Z_Construct_UFunction_ABaseWeapon_ProjectileFire());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_CurrentClip = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CurrentClip"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(CurrentClip, ABaseWeapon), 0x0010000000000005);
				UProperty* NewProp_CurrentAmmo = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CurrentAmmo"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(CurrentAmmo, ABaseWeapon), 0x0010000000000005);
				UProperty* NewProp_FireSound = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FireSound"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(FireSound, ABaseWeapon), 0x0010000000010001, Z_Construct_UClass_USoundCue_NoRegister());
				UProperty* NewProp_ProjectileType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ProjectileType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(ProjectileType, ABaseWeapon), 0x0010000000010001, Z_Construct_UEnum_No_Bark_Vs_EProjectileType());
				UProperty* NewProp_WeaponConfig = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("WeaponConfig"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(WeaponConfig, ABaseWeapon), 0x0010000000020005, Z_Construct_UScriptStruct_FWeaponData());
				UProperty* NewProp_WeaponCollisionComp = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("WeaponCollisionComp"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WeaponCollisionComp, ABaseWeapon), 0x00100000000a000d, Z_Construct_UClass_UBoxComponent_NoRegister());
				UProperty* NewProp_WeaponMesh = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("WeaponMesh"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WeaponMesh, ABaseWeapon), 0x00100000000a000d, Z_Construct_UClass_USkeletalMeshComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ABaseWeapon_FireAmmos(), "FireAmmos"); // 275812306
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ABaseWeapon_Instant_Fire(), "Instant_Fire"); // 2945436617
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ABaseWeapon_ProjectileFire(), "ProjectileFire"); // 3789654708
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BaseWeapon.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("BaseWeapon.h"));
				MetaData->SetValue(NewProp_CurrentClip, TEXT("Category"), TEXT("Config"));
				MetaData->SetValue(NewProp_CurrentClip, TEXT("ModuleRelativePath"), TEXT("BaseWeapon.h"));
				MetaData->SetValue(NewProp_CurrentAmmo, TEXT("Category"), TEXT("Config"));
				MetaData->SetValue(NewProp_CurrentAmmo, TEXT("ModuleRelativePath"), TEXT("BaseWeapon.h"));
				MetaData->SetValue(NewProp_FireSound, TEXT("Category"), TEXT("Config"));
				MetaData->SetValue(NewProp_FireSound, TEXT("ModuleRelativePath"), TEXT("BaseWeapon.h"));
				MetaData->SetValue(NewProp_ProjectileType, TEXT("Category"), TEXT("Config"));
				MetaData->SetValue(NewProp_ProjectileType, TEXT("ModuleRelativePath"), TEXT("BaseWeapon.h"));
				MetaData->SetValue(NewProp_WeaponConfig, TEXT("Category"), TEXT("Config"));
				MetaData->SetValue(NewProp_WeaponConfig, TEXT("ModuleRelativePath"), TEXT("BaseWeapon.h"));
				MetaData->SetValue(NewProp_WeaponConfig, TEXT("ToolTip"), TEXT("WeaponInfo"));
				MetaData->SetValue(NewProp_WeaponCollisionComp, TEXT("Category"), TEXT("Collision"));
				MetaData->SetValue(NewProp_WeaponCollisionComp, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_WeaponCollisionComp, TEXT("ModuleRelativePath"), TEXT("BaseWeapon.h"));
				MetaData->SetValue(NewProp_WeaponMesh, TEXT("Category"), TEXT("Collision"));
				MetaData->SetValue(NewProp_WeaponMesh, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_WeaponMesh, TEXT("ModuleRelativePath"), TEXT("BaseWeapon.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ABaseWeapon(Z_Construct_UClass_ABaseWeapon, &ABaseWeapon::StaticClass, TEXT("ABaseWeapon"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ABaseWeapon);
	UClass* Z_Construct_UClass_APickupHealth_NoRegister()
	{
		return APickupHealth::StaticClass();
	}
	UClass* Z_Construct_UClass_APickupHealth()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ABaseInteractable();
			Z_Construct_UPackage__Script_No_Bark_Vs();
			OuterClass = APickupHealth::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("PickupHealth.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("PickupHealth.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_APickupHealth(Z_Construct_UClass_APickupHealth, &APickupHealth::StaticClass, TEXT("APickupHealth"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(APickupHealth);
	UEnum* Z_Construct_UEnum_No_Bark_Vs_EHUDState()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_No_Bark_Vs();
		extern uint32 Get_Z_Construct_UEnum_No_Bark_Vs_EHUDState_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EHUDState"), 0, Get_Z_Construct_UEnum_No_Bark_Vs_EHUDState_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EHUDState"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EHUDState::Playing")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EHUDState::Spectating")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EHUDState::MatchEnd")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EHUDState::EHUDState_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("EHUDState");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("GameHud.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_No_Bark_Vs_EHUDState_CRC() { return 3778790446U; }
	UFunction* Z_Construct_UFunction_AGameHud_GetCurrentState()
	{
		struct GameHud_eventGetCurrentState_Parms
		{
			EHUDState ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AGameHud();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetCurrentState"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(GameHud_eventGetCurrentState_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(ReturnValue, GameHud_eventGetCurrentState_Parms), 0x0010000000000580, Z_Construct_UEnum_No_Bark_Vs_EHUDState());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("HUD"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("GameHud.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AGameHud_OnStateChanged()
	{
		UObject* Outer=Z_Construct_UClass_AGameHud();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnStateChanged"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020C00, 65535, sizeof(GameHud_eventOnStateChanged_Parms));
			UProperty* NewProp_NewState = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NewState"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(NewState, GameHud_eventOnStateChanged_Parms), 0x0010000000000080, Z_Construct_UEnum_No_Bark_Vs_EHUDState());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("HUDEvents"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("GameHud.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("/ Event hook to update HUD state (eg. to determine visibility of widgets)"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AGameHud_NoRegister()
	{
		return AGameHud::StaticClass();
	}
	UClass* Z_Construct_UClass_AGameHud()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AHUD();
			Z_Construct_UPackage__Script_No_Bark_Vs();
			OuterClass = AGameHud::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2090028C;

				OuterClass->LinkChild(Z_Construct_UFunction_AGameHud_GetCurrentState());
				OuterClass->LinkChild(Z_Construct_UFunction_AGameHud_OnStateChanged());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AGameHud_GetCurrentState(), "GetCurrentState"); // 2935681971
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AGameHud_OnStateChanged(), "OnStateChanged"); // 498739155
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Rendering Actor Input Replication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GameHud.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("GameHud.h"));
				MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AGameHud(Z_Construct_UClass_AGameHud, &AGameHud::StaticClass, TEXT("AGameHud"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AGameHud);
	UEnum* Z_Construct_UEnum_No_Bark_Vs_EItemType()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_No_Bark_Vs();
		extern uint32 Get_Z_Construct_UEnum_No_Bark_Vs_EItemType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EItemType"), 0, Get_Z_Construct_UEnum_No_Bark_Vs_EItemType_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EItemType"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EItemType::None")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EItemType::Weapon")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EItemType::MeleeWeapon")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EItemType::Armor")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EItemType::Food")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EItemType::Potion")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EItemType::Grenades")), 6));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EItemType::EItemType_MAX")), 7));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("EItemType");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("TypeClass.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_No_Bark_Vs_EItemType_CRC() { return 222818466U; }
	UEnum* Z_Construct_UEnum_No_Bark_Vs_EInventorySlot()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_No_Bark_Vs();
		extern uint32 Get_Z_Construct_UEnum_No_Bark_Vs_EInventorySlot_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EInventorySlot"), 0, Get_Z_Construct_UEnum_No_Bark_Vs_EInventorySlot_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EInventorySlot"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EInventorySlot::Hands")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EInventorySlot::Primary")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EInventorySlot::Secondary")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EInventorySlot::Melee")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("EInventorySlot::EInventorySlot_MAX")), 4));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("EInventorySlot");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Hands.ToolTip"), TEXT("For currently equipped items/weapons"));
			MetaData->SetValue(ReturnEnum, TEXT("Melee.ToolTip"), TEXT("For Melee weapons on bone"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("TypeClass.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Primary.ToolTip"), TEXT("For primary weapons on spine bone"));
			MetaData->SetValue(ReturnEnum, TEXT("Secondary.ToolTip"), TEXT("For secondary weapons on spine bone"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_No_Bark_Vs_EInventorySlot_CRC() { return 973525024U; }
	UScriptStruct* Z_Construct_UScriptStruct_FTakeHitInfo()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_No_Bark_Vs();
		extern uint32 Get_Z_Construct_UScriptStruct_FTakeHitInfo_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("TakeHitInfo"), sizeof(FTakeHitInfo), Get_Z_Construct_UScriptStruct_FTakeHitInfo_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TakeHitInfo"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FTakeHitInfo>, EStructFlags(0x00000005));
			UProperty* NewProp_RadialDamageEvent = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RadialDamageEvent"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(RadialDamageEvent, FTakeHitInfo), 0x0040008000000000, Z_Construct_UScriptStruct_FRadialDamageEvent());
			UProperty* NewProp_PointDamageEvent = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PointDamageEvent"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(PointDamageEvent, FTakeHitInfo), 0x0040008000000000, Z_Construct_UScriptStruct_FPointDamageEvent());
			UProperty* NewProp_GeneralDamageEvent = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GeneralDamageEvent"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(GeneralDamageEvent, FTakeHitInfo), 0x0040000000000000, Z_Construct_UScriptStruct_FDamageEvent());
			UProperty* NewProp_EnsureReplicationByte = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("EnsureReplicationByte"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(EnsureReplicationByte, FTakeHitInfo), 0x0040000000000000);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bKilled, FTakeHitInfo, bool);
			UProperty* NewProp_bKilled = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bKilled"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bKilled, FTakeHitInfo), 0x0010000000000000, CPP_BOOL_PROPERTY_BITMASK(bKilled, FTakeHitInfo), sizeof(bool), true);
			UProperty* NewProp_DamageEventClassID = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DamageEventClassID"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(DamageEventClassID, FTakeHitInfo), 0x0010000000000000);
			UProperty* NewProp_DamageCauser = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DamageCauser"), RF_Public|RF_Transient|RF_MarkAsNative) UWeakObjectProperty(CPP_PROPERTY_BASE(DamageCauser, FTakeHitInfo), 0x0014000000000000, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_PawnInstigator = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PawnInstigator"), RF_Public|RF_Transient|RF_MarkAsNative) UWeakObjectProperty(CPP_PROPERTY_BASE(PawnInstigator, FTakeHitInfo), 0x0014000000000000, Z_Construct_UClass_ANBCharacter_NoRegister());
			UProperty* NewProp_DamageTypeClass = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DamageTypeClass"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(CPP_PROPERTY_BASE(DamageTypeClass, FTakeHitInfo), 0x0010000000000000, Z_Construct_UClass_UObject_NoRegister(), UClass::StaticClass());
			UProperty* NewProp_ActualDamage = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ActualDamage"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ActualDamage, FTakeHitInfo), 0x0010000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("TypeClass.h"));
			MetaData->SetValue(NewProp_RadialDamageEvent, TEXT("ModuleRelativePath"), TEXT("TypeClass.h"));
			MetaData->SetValue(NewProp_PointDamageEvent, TEXT("ModuleRelativePath"), TEXT("TypeClass.h"));
			MetaData->SetValue(NewProp_GeneralDamageEvent, TEXT("ModuleRelativePath"), TEXT("TypeClass.h"));
			MetaData->SetValue(NewProp_EnsureReplicationByte, TEXT("ModuleRelativePath"), TEXT("TypeClass.h"));
			MetaData->SetValue(NewProp_bKilled, TEXT("ModuleRelativePath"), TEXT("TypeClass.h"));
			MetaData->SetValue(NewProp_DamageEventClassID, TEXT("ModuleRelativePath"), TEXT("TypeClass.h"));
			MetaData->SetValue(NewProp_DamageCauser, TEXT("ModuleRelativePath"), TEXT("TypeClass.h"));
			MetaData->SetValue(NewProp_PawnInstigator, TEXT("ModuleRelativePath"), TEXT("TypeClass.h"));
			MetaData->SetValue(NewProp_DamageTypeClass, TEXT("ModuleRelativePath"), TEXT("TypeClass.h"));
			MetaData->SetValue(NewProp_ActualDamage, TEXT("ModuleRelativePath"), TEXT("TypeClass.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FTakeHitInfo_CRC() { return 2770926697U; }
	UScriptStruct* Z_Construct_UScriptStruct_FCurrentInventoryItemInfo()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_No_Bark_Vs();
		extern uint32 Get_Z_Construct_UScriptStruct_FCurrentInventoryItemInfo_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("CurrentInventoryItemInfo"), sizeof(FCurrentInventoryItemInfo), Get_Z_Construct_UScriptStruct_FCurrentInventoryItemInfo_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CurrentInventoryItemInfo"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FCurrentInventoryItemInfo>, EStructFlags(0x00000001));
			UProperty* NewProp_ItemInfo = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ItemInfo"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ItemInfo, FCurrentInventoryItemInfo), 0x0010000000000005, Z_Construct_UScriptStruct_FInventoryItem());
			UProperty* NewProp_ItemIndex = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ItemIndex"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ItemIndex, FCurrentInventoryItemInfo), 0x0010000000000005);
			UProperty* NewProp_CurrentStackNumber = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CurrentStackNumber"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(CurrentStackNumber, FCurrentInventoryItemInfo), 0x0010000000000005);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("TypeClass.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("These are the  inventory Items  changeable"));
			MetaData->SetValue(NewProp_ItemInfo, TEXT("Category"), TEXT("CurrentInventoryItemInfo"));
			MetaData->SetValue(NewProp_ItemInfo, TEXT("ModuleRelativePath"), TEXT("TypeClass.h"));
			MetaData->SetValue(NewProp_ItemIndex, TEXT("Category"), TEXT("CurrentInventoryItemInfo"));
			MetaData->SetValue(NewProp_ItemIndex, TEXT("ModuleRelativePath"), TEXT("TypeClass.h"));
			MetaData->SetValue(NewProp_CurrentStackNumber, TEXT("Category"), TEXT("CurrentInventoryItemInfo"));
			MetaData->SetValue(NewProp_CurrentStackNumber, TEXT("ModuleRelativePath"), TEXT("TypeClass.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FCurrentInventoryItemInfo_CRC() { return 2940611080U; }
	UScriptStruct* Z_Construct_UScriptStruct_FInventoryItem()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_No_Bark_Vs();
		extern uint32 Get_Z_Construct_UScriptStruct_FInventoryItem_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("InventoryItem"), sizeof(FInventoryItem), Get_Z_Construct_UScriptStruct_FInventoryItem_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("InventoryItem"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FTableRowBase(), new UScriptStruct::TCppStructOps<FInventoryItem>, EStructFlags(0x00000001));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCanBeUsed, FInventoryItem, bool);
			UProperty* NewProp_bCanBeUsed = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bCanBeUsed"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCanBeUsed, FInventoryItem), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bCanBeUsed, FInventoryItem), sizeof(bool), true);
			UProperty* NewProp_CraftCombinations = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CraftCombinations"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(CraftCombinations, FInventoryItem), 0x0010000000000005);
			UProperty* NewProp_CraftCombinations_Inner = new(EC_InternalUseOnlyConstructor, NewProp_CraftCombinations, TEXT("CraftCombinations"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FCraftingInfo());
			UProperty* NewProp_MaxStackNumber = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MaxStackNumber"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(MaxStackNumber, FInventoryItem), 0x0010000000000005);
			UProperty* NewProp_Description = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Description"), RF_Public|RF_Transient|RF_MarkAsNative) UTextProperty(CPP_PROPERTY_BASE(Description, FInventoryItem), 0x0010000000000005);
			UProperty* NewProp_Thumbnail = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Thumbnail"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Thumbnail, FInventoryItem), 0x0010000000000005, Z_Construct_UClass_UTexture2D_NoRegister());
			UProperty* NewProp_eItemType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("eItemType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(eItemType, FInventoryItem), 0x0010000000000005, Z_Construct_UEnum_No_Bark_Vs_EItemType());
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Value, FInventoryItem), 0x0010000000000005);
			UProperty* NewProp_Action = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Action"), RF_Public|RF_Transient|RF_MarkAsNative) UTextProperty(CPP_PROPERTY_BASE(Action, FInventoryItem), 0x0010000000000005);
			UProperty* NewProp_Name = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Name"), RF_Public|RF_Transient|RF_MarkAsNative) UTextProperty(CPP_PROPERTY_BASE(Name, FInventoryItem), 0x0010000000000005);
			UProperty* NewProp_ItemPickup = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ItemPickup"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(CPP_PROPERTY_BASE(ItemPickup, FInventoryItem), 0x0014000000000005, Z_Construct_UClass_APickup_NoRegister(), UClass::StaticClass());
			UProperty* NewProp_ItemID = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ItemID"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(ItemID, FInventoryItem), 0x0010000000000005);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("TypeClass.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("TableRowBase for Data TABLE.\nThis will check if Items are allowed.\ndatabase system. only default functions will be written here"));
			MetaData->SetValue(NewProp_bCanBeUsed, TEXT("Category"), TEXT("InventoryItem"));
			MetaData->SetValue(NewProp_bCanBeUsed, TEXT("ModuleRelativePath"), TEXT("TypeClass.h"));
			MetaData->SetValue(NewProp_CraftCombinations, TEXT("Category"), TEXT("InventoryItem"));
			MetaData->SetValue(NewProp_CraftCombinations, TEXT("ModuleRelativePath"), TEXT("TypeClass.h"));
			MetaData->SetValue(NewProp_MaxStackNumber, TEXT("Category"), TEXT("InventoryItem"));
			MetaData->SetValue(NewProp_MaxStackNumber, TEXT("ModuleRelativePath"), TEXT("TypeClass.h"));
			MetaData->SetValue(NewProp_Description, TEXT("Category"), TEXT("InventoryItem"));
			MetaData->SetValue(NewProp_Description, TEXT("ModuleRelativePath"), TEXT("TypeClass.h"));
			MetaData->SetValue(NewProp_Thumbnail, TEXT("Category"), TEXT("InventoryItem"));
			MetaData->SetValue(NewProp_Thumbnail, TEXT("ModuleRelativePath"), TEXT("TypeClass.h"));
			MetaData->SetValue(NewProp_eItemType, TEXT("Category"), TEXT("InventoryItem"));
			MetaData->SetValue(NewProp_eItemType, TEXT("ModuleRelativePath"), TEXT("TypeClass.h"));
			MetaData->SetValue(NewProp_Value, TEXT("Category"), TEXT("InventoryItem"));
			MetaData->SetValue(NewProp_Value, TEXT("ModuleRelativePath"), TEXT("TypeClass.h"));
			MetaData->SetValue(NewProp_Action, TEXT("Category"), TEXT("InventoryItem"));
			MetaData->SetValue(NewProp_Action, TEXT("ModuleRelativePath"), TEXT("TypeClass.h"));
			MetaData->SetValue(NewProp_Name, TEXT("Category"), TEXT("InventoryItem"));
			MetaData->SetValue(NewProp_Name, TEXT("ModuleRelativePath"), TEXT("TypeClass.h"));
			MetaData->SetValue(NewProp_ItemPickup, TEXT("Category"), TEXT("InventoryItem"));
			MetaData->SetValue(NewProp_ItemPickup, TEXT("ModuleRelativePath"), TEXT("TypeClass.h"));
			MetaData->SetValue(NewProp_ItemID, TEXT("Category"), TEXT("InventoryItem"));
			MetaData->SetValue(NewProp_ItemID, TEXT("ModuleRelativePath"), TEXT("TypeClass.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FInventoryItem_CRC() { return 1226026906U; }
	UScriptStruct* Z_Construct_UScriptStruct_FCraftingInfo()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_No_Bark_Vs();
		extern uint32 Get_Z_Construct_UScriptStruct_FCraftingInfo_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("CraftingInfo"), sizeof(FCraftingInfo), Get_Z_Construct_UScriptStruct_FCraftingInfo_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CraftingInfo"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FTableRowBase(), new UScriptStruct::TCppStructOps<FCraftingInfo>, EStructFlags(0x00000001));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDestroyItemB, FCraftingInfo, bool);
			UProperty* NewProp_bDestroyItemB = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bDestroyItemB"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDestroyItemB, FCraftingInfo), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bDestroyItemB, FCraftingInfo), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDestroyItemA, FCraftingInfo, bool);
			UProperty* NewProp_bDestroyItemA = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bDestroyItemA"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDestroyItemA, FCraftingInfo), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bDestroyItemA, FCraftingInfo), sizeof(bool), true);
			UProperty* NewProp_ProductID = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ProductID"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(ProductID, FCraftingInfo), 0x0010000000000005);
			UProperty* NewProp_ComponentID = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ComponentID"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(ComponentID, FCraftingInfo), 0x0010000000000005);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("TypeClass.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Struct of things I can Craft."));
			MetaData->SetValue(NewProp_bDestroyItemB, TEXT("Category"), TEXT("CraftingInfo"));
			MetaData->SetValue(NewProp_bDestroyItemB, TEXT("ModuleRelativePath"), TEXT("TypeClass.h"));
			MetaData->SetValue(NewProp_bDestroyItemB, TEXT("ToolTip"), TEXT("destroy component"));
			MetaData->SetValue(NewProp_bDestroyItemA, TEXT("Category"), TEXT("CraftingInfo"));
			MetaData->SetValue(NewProp_bDestroyItemA, TEXT("ModuleRelativePath"), TEXT("TypeClass.h"));
			MetaData->SetValue(NewProp_bDestroyItemA, TEXT("ToolTip"), TEXT("item that gets created (barrier)"));
			MetaData->SetValue(NewProp_ProductID, TEXT("Category"), TEXT("CraftingInfo"));
			MetaData->SetValue(NewProp_ProductID, TEXT("ModuleRelativePath"), TEXT("TypeClass.h"));
			MetaData->SetValue(NewProp_ProductID, TEXT("ToolTip"), TEXT("item used to create Item (  cog)"));
			MetaData->SetValue(NewProp_ComponentID, TEXT("Category"), TEXT("CraftingInfo"));
			MetaData->SetValue(NewProp_ComponentID, TEXT("ModuleRelativePath"), TEXT("TypeClass.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FCraftingInfo_CRC() { return 2041587229U; }
	UFunction* Z_Construct_UFunction_ANBCharacter_CheckForInteractables()
	{
		UObject* Outer=Z_Construct_UClass_ANBCharacter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CheckForInteractables"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04080401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("PickupCondition"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("NBCharacter.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_ANBCharacter_GetInteractableInView()
	{
		struct NBCharacter_eventGetInteractableInView_Parms
		{
			ABaseInteractable* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_ANBCharacter();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetInteractableInView"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04080401, 65535, sizeof(NBCharacter_eventGetInteractableInView_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, NBCharacter_eventGetInteractableInView_Parms), 0x0010000000000580, Z_Construct_UClass_ABaseInteractable_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("PickupCondition"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("NBCharacter.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_ANBCharacter_NoRegister()
	{
		return ANBCharacter::StaticClass();
	}
	UClass* Z_Construct_UClass_ANBCharacter()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ACharacter();
			Z_Construct_UPackage__Script_No_Bark_Vs();
			OuterClass = ANBCharacter::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_ANBCharacter_CheckForInteractables());
				OuterClass->LinkChild(Z_Construct_UFunction_ANBCharacter_GetInteractableInView());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_SecondaryAttachPoint = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SecondaryAttachPoint"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(SecondaryAttachPoint, ANBCharacter), 0x0040000000010001);
				UProperty* NewProp_PrimaryAttachPoint = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PrimaryAttachPoint"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(PrimaryAttachPoint, ANBCharacter), 0x0040000000010001);
				UProperty* NewProp_MeleeAttachPoint = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MeleeAttachPoint"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(MeleeAttachPoint, ANBCharacter), 0x0040000000010001);
				UProperty* NewProp_WeaponAttachPoint = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("WeaponAttachPoint"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(WeaponAttachPoint, ANBCharacter), 0x0040000000010001);
				UProperty* NewProp_MaxInteractDistance = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxInteractDistance"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MaxInteractDistance, ANBCharacter), 0x0010000000000005);
				UProperty* NewProp_MaxSprintSpeed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxSprintSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MaxSprintSpeed, ANBCharacter), 0x0010000000000005);
				UProperty* NewProp_walkingSpeed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("walkingSpeed"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(walkingSpeed, ANBCharacter), 0x0010000000000005);
				UProperty* NewProp_MagicTimerRate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MagicTimerRate"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MagicTimerRate, ANBCharacter), 0x0010000000000005);
				UProperty* NewProp_HealthTimerRate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("HealthTimerRate"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(HealthTimerRate, ANBCharacter), 0x0010000000000005);
				UProperty* NewProp_StaminaTimerRate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StaminaTimerRate"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(StaminaTimerRate, ANBCharacter), 0x0010000000000005);
				UProperty* NewProp_SprintDeductionRate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SprintDeductionRate"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(SprintDeductionRate, ANBCharacter), 0x0010000000000005);
				UProperty* NewProp_StaminaRegenRate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StaminaRegenRate"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(StaminaRegenRate, ANBCharacter), 0x0010000000000005);
				UProperty* NewProp_MaxMagic = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxMagic"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MaxMagic, ANBCharacter), 0x0010000000000005);
				UProperty* NewProp_CurrentMagic = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CurrentMagic"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(CurrentMagic, ANBCharacter), 0x0010000000000005);
				UProperty* NewProp_MaxStamina = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxStamina"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MaxStamina, ANBCharacter), 0x0010000000000005);
				UProperty* NewProp_CurrentStamina = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CurrentStamina"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(CurrentStamina, ANBCharacter), 0x0010000000000005);
				UProperty* NewProp_MaxHealth = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxHealth"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MaxHealth, ANBCharacter), 0x0010000000000005);
				UProperty* NewProp_CurrentHealth = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CurrentHealth"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(CurrentHealth, ANBCharacter), 0x0010000000000005);
				UProperty* NewProp_WeaponClass = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("WeaponClass"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(CPP_PROPERTY_BASE(WeaponClass, ANBCharacter), 0x0014000000010001, Z_Construct_UClass_ABaseWeapon_NoRegister(), UClass::StaticClass());
				UProperty* NewProp_BaseLookUpRate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BaseLookUpRate"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(BaseLookUpRate, ANBCharacter), 0x0010000000020015);
				UProperty* NewProp_BaseTurnRate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BaseTurnRate"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(BaseTurnRate, ANBCharacter), 0x0010000000020015);
				UProperty* NewProp_FollowCamera = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FollowCamera"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(FollowCamera, ANBCharacter), 0x00400000000a001d, Z_Construct_UClass_UCameraComponent_NoRegister());
				UProperty* NewProp_CameraBoom = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CameraBoom"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(CameraBoom, ANBCharacter), 0x00400000000a001d, Z_Construct_UClass_USpringArmComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ANBCharacter_CheckForInteractables(), "CheckForInteractables"); // 271824645
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_ANBCharacter_GetInteractableInView(), "GetInteractableInView"); // 3992094905
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("NBCharacter.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("NBCharacter.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("GunSkeltal -> bullet spawn point  = MuzzleTip"));
				MetaData->SetValue(NewProp_SecondaryAttachPoint, TEXT("Category"), TEXT("Sockets"));
				MetaData->SetValue(NewProp_SecondaryAttachPoint, TEXT("ModuleRelativePath"), TEXT("NBCharacter.h"));
				MetaData->SetValue(NewProp_SecondaryAttachPoint, TEXT("ToolTip"), TEXT("Attachpoint for secondary weapons"));
				MetaData->SetValue(NewProp_PrimaryAttachPoint, TEXT("Category"), TEXT("Sockets"));
				MetaData->SetValue(NewProp_PrimaryAttachPoint, TEXT("ModuleRelativePath"), TEXT("NBCharacter.h"));
				MetaData->SetValue(NewProp_PrimaryAttachPoint, TEXT("ToolTip"), TEXT("Attachpoint for primary weapons"));
				MetaData->SetValue(NewProp_MeleeAttachPoint, TEXT("Category"), TEXT("Sockets"));
				MetaData->SetValue(NewProp_MeleeAttachPoint, TEXT("ModuleRelativePath"), TEXT("NBCharacter.h"));
				MetaData->SetValue(NewProp_MeleeAttachPoint, TEXT("ToolTip"), TEXT("Attachpoint for items carried on the belt/pelvis."));
				MetaData->SetValue(NewProp_WeaponAttachPoint, TEXT("Category"), TEXT("Sockets"));
				MetaData->SetValue(NewProp_WeaponAttachPoint, TEXT("ModuleRelativePath"), TEXT("NBCharacter.h"));
				MetaData->SetValue(NewProp_WeaponAttachPoint, TEXT("ToolTip"), TEXT("Attachpoint for active weapon/item in hands"));
				MetaData->SetValue(NewProp_MaxInteractDistance, TEXT("Category"), TEXT("Status"));
				MetaData->SetValue(NewProp_MaxInteractDistance, TEXT("ModuleRelativePath"), TEXT("NBCharacter.h"));
				MetaData->SetValue(NewProp_MaxSprintSpeed, TEXT("Category"), TEXT("Status"));
				MetaData->SetValue(NewProp_MaxSprintSpeed, TEXT("ModuleRelativePath"), TEXT("NBCharacter.h"));
				MetaData->SetValue(NewProp_walkingSpeed, TEXT("Category"), TEXT("Status"));
				MetaData->SetValue(NewProp_walkingSpeed, TEXT("ModuleRelativePath"), TEXT("NBCharacter.h"));
				MetaData->SetValue(NewProp_MagicTimerRate, TEXT("Category"), TEXT("Status"));
				MetaData->SetValue(NewProp_MagicTimerRate, TEXT("ModuleRelativePath"), TEXT("NBCharacter.h"));
				MetaData->SetValue(NewProp_HealthTimerRate, TEXT("Category"), TEXT("Status"));
				MetaData->SetValue(NewProp_HealthTimerRate, TEXT("ModuleRelativePath"), TEXT("NBCharacter.h"));
				MetaData->SetValue(NewProp_StaminaTimerRate, TEXT("Category"), TEXT("Status"));
				MetaData->SetValue(NewProp_StaminaTimerRate, TEXT("ModuleRelativePath"), TEXT("NBCharacter.h"));
				MetaData->SetValue(NewProp_SprintDeductionRate, TEXT("Category"), TEXT("Status"));
				MetaData->SetValue(NewProp_SprintDeductionRate, TEXT("ModuleRelativePath"), TEXT("NBCharacter.h"));
				MetaData->SetValue(NewProp_StaminaRegenRate, TEXT("Category"), TEXT("Status"));
				MetaData->SetValue(NewProp_StaminaRegenRate, TEXT("ModuleRelativePath"), TEXT("NBCharacter.h"));
				MetaData->SetValue(NewProp_MaxMagic, TEXT("Category"), TEXT("Status"));
				MetaData->SetValue(NewProp_MaxMagic, TEXT("ModuleRelativePath"), TEXT("NBCharacter.h"));
				MetaData->SetValue(NewProp_CurrentMagic, TEXT("Category"), TEXT("Status"));
				MetaData->SetValue(NewProp_CurrentMagic, TEXT("ModuleRelativePath"), TEXT("NBCharacter.h"));
				MetaData->SetValue(NewProp_MaxStamina, TEXT("Category"), TEXT("Status"));
				MetaData->SetValue(NewProp_MaxStamina, TEXT("ModuleRelativePath"), TEXT("NBCharacter.h"));
				MetaData->SetValue(NewProp_CurrentStamina, TEXT("Category"), TEXT("Status"));
				MetaData->SetValue(NewProp_CurrentStamina, TEXT("ModuleRelativePath"), TEXT("NBCharacter.h"));
				MetaData->SetValue(NewProp_MaxHealth, TEXT("Category"), TEXT("Status"));
				MetaData->SetValue(NewProp_MaxHealth, TEXT("ModuleRelativePath"), TEXT("NBCharacter.h"));
				MetaData->SetValue(NewProp_CurrentHealth, TEXT("Category"), TEXT("Status"));
				MetaData->SetValue(NewProp_CurrentHealth, TEXT("ModuleRelativePath"), TEXT("NBCharacter.h"));
				MetaData->SetValue(NewProp_WeaponClass, TEXT("Category"), TEXT("Spawn"));
				MetaData->SetValue(NewProp_WeaponClass, TEXT("ModuleRelativePath"), TEXT("NBCharacter.h"));
				MetaData->SetValue(NewProp_WeaponClass, TEXT("ToolTip"), TEXT("Base look up/down rate, in deg/sec. Other scaling may affect final rate."));
				MetaData->SetValue(NewProp_BaseLookUpRate, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_BaseLookUpRate, TEXT("ModuleRelativePath"), TEXT("NBCharacter.h"));
				MetaData->SetValue(NewProp_BaseLookUpRate, TEXT("ToolTip"), TEXT("Base look up/down rate, in deg/sec. Other scaling may affect final rate."));
				MetaData->SetValue(NewProp_BaseTurnRate, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_BaseTurnRate, TEXT("ModuleRelativePath"), TEXT("NBCharacter.h"));
				MetaData->SetValue(NewProp_BaseTurnRate, TEXT("ToolTip"), TEXT("Base turn rate, in deg/sec. Other scaling may affect final turn rate."));
				MetaData->SetValue(NewProp_FollowCamera, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_FollowCamera, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_FollowCamera, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_FollowCamera, TEXT("ModuleRelativePath"), TEXT("NBCharacter.h"));
				MetaData->SetValue(NewProp_FollowCamera, TEXT("ToolTip"), TEXT("Follow camera"));
				MetaData->SetValue(NewProp_CameraBoom, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_CameraBoom, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_CameraBoom, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_CameraBoom, TEXT("ModuleRelativePath"), TEXT("NBCharacter.h"));
				MetaData->SetValue(NewProp_CameraBoom, TEXT("ToolTip"), TEXT("Camera boom positioning the camera behind the character"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ANBCharacter(Z_Construct_UClass_ANBCharacter, &ANBCharacter::StaticClass, TEXT("ANBCharacter"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ANBCharacter);
	UClass* Z_Construct_UClass_ANo_Bark_VsGameModeBase_NoRegister()
	{
		return ANo_Bark_VsGameModeBase::StaticClass();
	}
	UClass* Z_Construct_UClass_ANo_Bark_VsGameModeBase()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AGameModeBase();
			Z_Construct_UPackage__Script_No_Bark_Vs();
			OuterClass = ANo_Bark_VsGameModeBase::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900288;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Info Rendering MovementReplication Replication Actor Input Movement Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("No_Bark_VsGameModeBase.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("No_Bark_VsGameModeBase.h"));
				MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ANo_Bark_VsGameModeBase(Z_Construct_UClass_ANo_Bark_VsGameModeBase, &ANo_Bark_VsGameModeBase::StaticClass, TEXT("ANo_Bark_VsGameModeBase"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ANo_Bark_VsGameModeBase);
	UFunction* Z_Construct_UFunction_APlayController_AddItemtoInventoryByID()
	{
		struct PlayController_eventAddItemtoInventoryByID_Parms
		{
			FName ID;
		};
		UObject* Outer=Z_Construct_UClass_APlayController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AddItemtoInventoryByID"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(PlayController_eventAddItemtoInventoryByID_Parms));
			UProperty* NewProp_ID = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ID"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(ID, PlayController_eventAddItemtoInventoryByID_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Interactable"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("PlayController.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_APlayController_ChangeMaxInventorySize()
	{
		struct PlayController_eventChangeMaxInventorySize_Parms
		{
			int32 iNoInventory;
		};
		UObject* Outer=Z_Construct_UClass_APlayController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ChangeMaxInventorySize"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(PlayController_eventChangeMaxInventorySize_Parms));
			UProperty* NewProp_iNoInventory = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("iNoInventory"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(iNoInventory, PlayController_eventChangeMaxInventorySize_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Interactable"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("PlayController.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_APlayController_CloseInventory()
	{
		UObject* Outer=Z_Construct_UClass_APlayController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CloseInventory"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Interactable"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("PlayController.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_APlayController_CraftItem()
	{
		struct PlayController_eventCraftItem_Parms
		{
			FInventoryItem ItemA;
			FInventoryItem ItemB;
			APlayController* PlayController;
		};
		UObject* Outer=Z_Construct_UClass_APlayController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CraftItem"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(PlayController_eventCraftItem_Parms));
			UProperty* NewProp_PlayController = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayController"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(PlayController, PlayController_eventCraftItem_Parms), 0x0010000000000080, Z_Construct_UClass_APlayController_NoRegister());
			UProperty* NewProp_ItemB = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ItemB"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ItemB, PlayController_eventCraftItem_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FInventoryItem());
			UProperty* NewProp_ItemA = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ItemA"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ItemA, PlayController_eventCraftItem_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FInventoryItem());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Interactable"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("PlayController.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_APlayController_EnableActionBar()
	{
		struct PlayController_eventEnableActionBar_Parms
		{
			FCurrentInventoryItemInfo iItemInfo;
		};
		UObject* Outer=Z_Construct_UClass_APlayController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EnableActionBar"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(PlayController_eventEnableActionBar_Parms));
			UProperty* NewProp_iItemInfo = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("iItemInfo"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(iItemInfo, PlayController_eventEnableActionBar_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FCurrentInventoryItemInfo());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Interactable"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("PlayController.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_APlayController_Interact()
	{
		UObject* Outer=Z_Construct_UClass_APlayController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Interact"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Interactable"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("PlayController.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_APlayController_OpenInventory()
	{
		UObject* Outer=Z_Construct_UClass_APlayController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OpenInventory"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Interactable"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("PlayController.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_APlayController_ReloadInventory()
	{
		UObject* Outer=Z_Construct_UClass_APlayController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReloadInventory"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x08020800, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("PlayController.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_APlayController_SetInputModetoGameandUI()
	{
		struct PlayController_eventSetInputModetoGameandUI_Parms
		{
			bool bHideCursor;
		};
		UObject* Outer=Z_Construct_UClass_APlayController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetInputModetoGameandUI"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(PlayController_eventSetInputModetoGameandUI_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bHideCursor, PlayController_eventSetInputModetoGameandUI_Parms, bool);
			UProperty* NewProp_bHideCursor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bHideCursor"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bHideCursor, PlayController_eventSetInputModetoGameandUI_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(bHideCursor, PlayController_eventSetInputModetoGameandUI_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Interactable"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("PlayController.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_APlayController_SetupInputComponent()
	{
		UObject* Outer=Z_Construct_UClass_APlayController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetupInputComponent"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04080400, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Interactable"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("PlayController.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_APlayController_UnUseItem()
	{
		struct PlayController_eventUnUseItem_Parms
		{
			FCurrentInventoryItemInfo iItemInfo;
		};
		UObject* Outer=Z_Construct_UClass_APlayController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("UnUseItem"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(PlayController_eventUnUseItem_Parms));
			UProperty* NewProp_iItemInfo = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("iItemInfo"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(iItemInfo, PlayController_eventUnUseItem_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FCurrentInventoryItemInfo());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Interactable"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("PlayController.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_APlayController_UseItem()
	{
		struct PlayController_eventUseItem_Parms
		{
			FCurrentInventoryItemInfo iItemInfo;
		};
		UObject* Outer=Z_Construct_UClass_APlayController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("UseItem"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(PlayController_eventUseItem_Parms));
			UProperty* NewProp_iItemInfo = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("iItemInfo"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(iItemInfo, PlayController_eventUseItem_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FCurrentInventoryItemInfo());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Interactable"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("PlayController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("inventory interaction functions"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_APlayController_NoRegister()
	{
		return APlayController::StaticClass();
	}
	UClass* Z_Construct_UClass_APlayController()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_APlayerController();
			Z_Construct_UPackage__Script_No_Bark_Vs();
			OuterClass = APlayController::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900284;

				OuterClass->LinkChild(Z_Construct_UFunction_APlayController_AddItemtoInventoryByID());
				OuterClass->LinkChild(Z_Construct_UFunction_APlayController_ChangeMaxInventorySize());
				OuterClass->LinkChild(Z_Construct_UFunction_APlayController_CloseInventory());
				OuterClass->LinkChild(Z_Construct_UFunction_APlayController_CraftItem());
				OuterClass->LinkChild(Z_Construct_UFunction_APlayController_EnableActionBar());
				OuterClass->LinkChild(Z_Construct_UFunction_APlayController_Interact());
				OuterClass->LinkChild(Z_Construct_UFunction_APlayController_OpenInventory());
				OuterClass->LinkChild(Z_Construct_UFunction_APlayController_ReloadInventory());
				OuterClass->LinkChild(Z_Construct_UFunction_APlayController_SetInputModetoGameandUI());
				OuterClass->LinkChild(Z_Construct_UFunction_APlayController_SetupInputComponent());
				OuterClass->LinkChild(Z_Construct_UFunction_APlayController_UnUseItem());
				OuterClass->LinkChild(Z_Construct_UFunction_APlayController_UseItem());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_LastAddedInventoryIndex = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LastAddedInventoryIndex"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(LastAddedInventoryIndex, APlayController), 0x0010000000000005);
				UProperty* NewProp_MaxInventorySize = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MaxInventorySize"), RF_Public|RF_Transient|RF_MarkAsNative) UUnsizedIntProperty(CPP_PROPERTY_BASE(MaxInventorySize, APlayController), 0x0010000000000005);
				UProperty* NewProp_MyEquipmentWidget = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MyEquipmentWidget"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(MyEquipmentWidget, APlayController), 0x0010000000000005, Z_Construct_UClass_UUserWidget_NoRegister());
				UProperty* NewProp_MyInventoryWidget = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MyInventoryWidget"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(MyInventoryWidget, APlayController), 0x0010000000000005, Z_Construct_UClass_UUserWidget_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(isMyInventoryOpen, APlayController, bool);
				UProperty* NewProp_isMyInventoryOpen = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("isMyInventoryOpen"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(isMyInventoryOpen, APlayController), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(isMyInventoryOpen, APlayController), sizeof(bool), true);
				UProperty* NewProp_wEquipment = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("wEquipment"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(CPP_PROPERTY_BASE(wEquipment, APlayController), 0x0014000000000005, Z_Construct_UClass_UUserWidget_NoRegister(), UClass::StaticClass());
				UProperty* NewProp_wInventory = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("wInventory"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(CPP_PROPERTY_BASE(wInventory, APlayController), 0x0014000000000005, Z_Construct_UClass_UUserWidget_NoRegister(), UClass::StaticClass());
				UProperty* NewProp_FCurrentInventory = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FCurrentInventory"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(FCurrentInventory, APlayController), 0x0010000000020005);
				UProperty* NewProp_FCurrentInventory_Inner = new(EC_InternalUseOnlyConstructor, NewProp_FCurrentInventory, TEXT("FCurrentInventory"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000020000, Z_Construct_UScriptStruct_FCurrentInventoryItemInfo());
				UProperty* NewProp_CurrentInteractable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CurrentInteractable"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(CurrentInteractable, APlayController), 0x0010000000000005, Z_Construct_UClass_ABaseInteractable_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_APlayController_AddItemtoInventoryByID(), "AddItemtoInventoryByID"); // 3382341165
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_APlayController_ChangeMaxInventorySize(), "ChangeMaxInventorySize"); // 1384057146
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_APlayController_CloseInventory(), "CloseInventory"); // 188329387
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_APlayController_CraftItem(), "CraftItem"); // 743880769
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_APlayController_EnableActionBar(), "EnableActionBar"); // 3949029879
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_APlayController_Interact(), "Interact"); // 2061274985
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_APlayController_OpenInventory(), "OpenInventory"); // 1071467656
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_APlayController_ReloadInventory(), "ReloadInventory"); // 2539732454
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_APlayController_SetInputModetoGameandUI(), "SetInputModetoGameandUI"); // 2781731518
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_APlayController_SetupInputComponent(), "SetupInputComponent"); // 3880574209
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_APlayController_UnUseItem(), "UnUseItem"); // 847783340
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_APlayController_UseItem(), "UseItem"); // 2388829574
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("PlayController.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("PlayController.h"));
				MetaData->SetValue(NewProp_LastAddedInventoryIndex, TEXT("Category"), TEXT("Widgets"));
				MetaData->SetValue(NewProp_LastAddedInventoryIndex, TEXT("ModuleRelativePath"), TEXT("PlayController.h"));
				MetaData->SetValue(NewProp_MaxInventorySize, TEXT("Category"), TEXT("Widgets"));
				MetaData->SetValue(NewProp_MaxInventorySize, TEXT("ModuleRelativePath"), TEXT("PlayController.h"));
				MetaData->SetValue(NewProp_MyEquipmentWidget, TEXT("Category"), TEXT("Widgets"));
				MetaData->SetValue(NewProp_MyEquipmentWidget, TEXT("ModuleRelativePath"), TEXT("PlayController.h"));
				MetaData->SetValue(NewProp_MyInventoryWidget, TEXT("Category"), TEXT("Widgets"));
				MetaData->SetValue(NewProp_MyInventoryWidget, TEXT("ModuleRelativePath"), TEXT("PlayController.h"));
				MetaData->SetValue(NewProp_MyInventoryWidget, TEXT("ToolTip"), TEXT("Variable to hold the widget After Creating it."));
				MetaData->SetValue(NewProp_isMyInventoryOpen, TEXT("Category"), TEXT("Status"));
				MetaData->SetValue(NewProp_isMyInventoryOpen, TEXT("ModuleRelativePath"), TEXT("PlayController.h"));
				MetaData->SetValue(NewProp_wEquipment, TEXT("Category"), TEXT("Widgets"));
				MetaData->SetValue(NewProp_wEquipment, TEXT("ModuleRelativePath"), TEXT("PlayController.h"));
				MetaData->SetValue(NewProp_wInventory, TEXT("Category"), TEXT("Widgets"));
				MetaData->SetValue(NewProp_wInventory, TEXT("ModuleRelativePath"), TEXT("PlayController.h"));
				MetaData->SetValue(NewProp_wInventory, TEXT("ToolTip"), TEXT("Reference UMG Asset in the Editor"));
				MetaData->SetValue(NewProp_FCurrentInventory, TEXT("Category"), TEXT("PlayController"));
				MetaData->SetValue(NewProp_FCurrentInventory, TEXT("ModuleRelativePath"), TEXT("PlayController.h"));
				MetaData->SetValue(NewProp_FCurrentInventory, TEXT("ToolTip"), TEXT("Array of inventory"));
				MetaData->SetValue(NewProp_CurrentInteractable, TEXT("Category"), TEXT("PlayController"));
				MetaData->SetValue(NewProp_CurrentInteractable, TEXT("ModuleRelativePath"), TEXT("PlayController.h"));
				MetaData->SetValue(NewProp_CurrentInteractable, TEXT("ToolTip"), TEXT("The interactable that player is currently looking at."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_APlayController(Z_Construct_UClass_APlayController, &APlayController::StaticClass, TEXT("APlayController"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(APlayController);
	UClass* Z_Construct_UClass_APlayGameMode_NoRegister()
	{
		return APlayGameMode::StaticClass();
	}
	UClass* Z_Construct_UClass_APlayGameMode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AGameMode();
			Z_Construct_UPackage__Script_No_Bark_Vs();
			OuterClass = APlayGameMode::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2090028C;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ItemDB = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ItemDB"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ItemDB, APlayGameMode), 0x0020080000010001, Z_Construct_UClass_UDataTable_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Info Rendering MovementReplication Replication Actor Input Movement Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("PlayGameMode.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("PlayGameMode.h"));
				MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
				MetaData->SetValue(NewProp_ItemDB, TEXT("Category"), TEXT("PlayGameMode"));
				MetaData->SetValue(NewProp_ItemDB, TEXT("ModuleRelativePath"), TEXT("PlayGameMode.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_APlayGameMode(Z_Construct_UClass_APlayGameMode, &APlayGameMode::StaticClass, TEXT("APlayGameMode"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(APlayGameMode);
	UPackage* Z_Construct_UPackage__Script_No_Bark_Vs()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/No_Bark_Vs")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0xF2607F17;
			Guid.B = 0xBCE7AEBF;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
